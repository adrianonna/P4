docker-compose up -d //subir as imagens
docker-compose down //para os serviços do conteiner
docker-compose ps // lista os conteiners que estão rodando
docker exec -it {nome conteiner} bash //abre terminal do conteiner
mysql -u root -p //acesso ao banco
docker-compose --build //reconstruir o conteiner docker
docker rm {nome conteiner} //apagar conteiner
ctrl + R //pesquisa os comandos a medida que digita
docker system prune {-a} //remove containers e images
docker volume prune //remove os volumes não usados
which //mostra onde está o docker
docker-compose exec app php artisan tinker //abre terminal(shell) do laravel no container app
sudo systemctl start docker //inicia o serviço do docker
docker-compose -h //???
systemctl status docker //vefirica o status do docker
sudo service docker start //inicia o serviço do docker

sudo nano /etc/docker/daemon.json
{
    "dns": ["10.0.0.2", "8.8.8.8"]
}
sudo service docker restart
sudo nano /var/snap/docker/current/config/daemon.json


dns: //IFPB
- 200.129.79.61
- 200.129.79.52

config>database.php
'default' => env('DB_CONNECTION', 'pgsql') //trocado de mysql para pgsql



BANCO
MySql:
create database {nomeDoBanco} //cria o banco de dados
use {nomeDoBanco}; //entra no banco
show tables; //mostra todas as tabelas
show databases;
show full columns from {nomeTabela}; //mostra todos os campos da tabela
describe {tabela}; //mostra tabela

create table usuarios(
		idusuario int AUTO_INCREMENT PRIMARY key,
		nome varchar(30),
		telefone varchar(30),
		email varchar(40),
		senha varchar(32));

Postgres:
psql -U {usuario} -d {nomeDoBanco}
\dt //mostra todas as tabelas
\d {tabela} //descreve a tabela informada




PDO
PDO::query — Executa uma instrução SQL, retornando um conjunto de resultados como um objeto PDOStatement
PDO::exec — Executa uma instrução SQL e retornar o número de linhas afetadas
PDO::prepare — Prepara uma instrução para execução e retorna um objeto de instrução
PDOStatement::rowCount — Retorna o número de linhas afetadas pela última instrução SQL
PDOStatement::execute — Executa uma declaração preparada



DOCUMENTAÇÃO
$dsn = 'mysql:dbname=testdb;host=127.0.0.1';
$user = 'dbuser';
$password = 'dbpass';
$dbh = new PDO($dsn, $user, $password);

LUIZ
'mysql:host=mysql;dbname=egressos;port=3306;'


comandos artisa
docker exec app php artisan make:controller {ControllerName} --resource --model={ModelName}
docker exec app php artisan make:migration {create_name_table} --create={name}
docker exec app php artisan migrate
docker exec app php artisan migrate:refresh --seed // Refresh the database and run all database seeds
docker exec -it app php artisan key:generate

docker exec app php artisan db:seed --class=UsersTableSeeder